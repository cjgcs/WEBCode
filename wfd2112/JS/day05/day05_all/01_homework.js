/*
//练习：打印2000~2100之间前10个闰年
//声明变量用于记录闰年的数量
for(var i=2000,count=0;i<=2100;i++){
  //i代表所有的年份
  //判断每个年份是否为闰年
  if(i%4===0 && i%100!==0 || i%400===0){
    console.log(i);
    //闰年的数量加1
	count++;
	//每次数量加1，判断是否为10
	if(count===10){
	  //强制结束循环
	  break;
	}
  }
}
console.log(count);

//练习：声明变量保存任意一个数字，查看这个数字是否为素数，如果是打印‘素数’，否则打印‘非素数’。
//素数(质素)：在1以上的整数中，除了1和自身以外，不能为其它数字整除
//  6       7       8
//1   6   1   7   1    8
//到2~n-1之间，查找是否有能被整除的数字，如果有说明不是素数，没有说明是素数
var n=100000000000;
//循环产生2~n-1之间所有的整数
for(var i=2,count=0;i<n;i++){
  //i代表所有的整数
  //判断每个数字是否n整除
  if(n%i===0){
    //有能被整除的数字，数量加1
	count++;
    //一旦有能被整除的数字，就提前结束，不用再查找其它的
	break;
  }
}
//当循环结束后，判断能被整除的数量
//如果数量还是0，说明没有能被整除的数字，是素数
if(count===0){
  console.log('素数');
}else{
  console.log('非素数');
}
*/

//练习：九九乘法表
//*
//**
//***
//****
//1*1=1
//1*2=2 2*2=4
//1*3=3 2*3=6 3*3=9
//外层循环：控制循环的行数
for(var i=1;i<=9;i++){
  //内层循环：控制每一行循环的列数
  //第1行  <=1
  //第2行  <=2
  //第3行  <=3
  //第4行  <=4
  //循环条件由所在的行i决定
  for(var j=1,str='';j<=i;j++){
	//每次拼接一列
	//str+='*';
	//列*行=(列*行)
    str+=j+'*'+i+'='+(j*i)+' ';
	//在第3行或者第4行，并且第2列多拼接一个空格
	if((i===3 || i===4) && j===2){
	  str+=' ';
	}
  }
  //每一行拼接结束后，打印这一行
  console.log(str);
}







